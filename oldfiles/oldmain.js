// Frank Poth 03/23/2018

/* I moved the world object into its own class and I made the Player class a class
inside of Game.World. I am doing this in order to compartmentalize my objects more
accurately. The Player class will never be used outside of the World class, and the
World class will never be used outside of the Game class, therefore the classes will
be nested: Game -> Game.World -> Game.World.Player */

const Game = function() {

    /* The world object is now its own class. */
    this.world = new Game.World();
  
    /* The Game.update function works the same as in part 2. */
    this.update = function() {
  
      this.world.update();
  
    };
  
  };
  
  Game.prototype = { constructor : Game };
  
  /* The world is now its own class. */
  Game.World = function(friction = 0.9, gravity = 2) {
  
    this.friction = friction;
    this.gravity  = gravity;
  
    /* Player is now its own class inside of the Game.World object. */
    this.player   = new Game.World.Player();
  
    /* Here is the map data. Later on I will load it from a json file, but for now
    I will just hardcode it here. */
    this.columns   = 28;
    this.rows      = 16;
    //this.rows      = 18;
    this.tile_size = 16;
  
    
    this.map = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5852,5189,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5852,5189,5866,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5852,5189,5188,5866,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5852,5189,5188,5866,5866,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6019,5189,5188,5866,5866,5866,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6103,5188,5866,5866,5866,5866,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6272,6611,6612,6613,6613,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2792,2793,2794,2795,2796,2797,
  2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2876,2877,2878,2879,2880,2881]  
    
    /*
    this.map = [9,1,0,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,64,64,64,64,64,64,64,64,64,64,64,64,64,64,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,
      9,64,64,64,64,64,64,64,64,64,64,64,64,64,64,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,
      30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,
      29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,
      29,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,30,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      19,18,19,19,19,3,19,19,19,19,3,19,19,19,19,3,19,19,19,19,3,19,19,19,19,3,19,30,
      10,9,10,10,10,30,10,10,10,10,30,10,10,10,10,30,10,10,10,10,30,10,10,10,10,30,10,30];
      */
  
     /*   
    this.map = [6618,6619,6620,6621,6610,6611,6612,6613,6614,6615,6616,6617,6618,6619,6620,6621,6610,6611,6612,6613,6614,6615,6616,6617,6618,6619,6620,6621,
      6698,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5853,6611,6612,6613,6614,
      4998,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3920,4268,4269,4268,4269,
      5082,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      4998,-1,-1,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,5193,5191,5192,5193,5193,5185,5186,5093,5094,-1,-1,-1,6023,5939,-1,
      5082,-1,-1,5079,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3847,3512,3513,3512,3513,3512,
      4998,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      5082,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,5193,5193,5185,5186,5187,5188,5189,5190,5191,5192,5193,5193,6191,6107,6023,5939,5855,
      5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5277,5269,5270,5271,5272,5273,5274,5275,5276,5277,5277,6192,6108,6024,5940,6933,
      5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,-1,-1,-1,-1,-1,
      5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,-1,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6191,6107,6023,5939,5855,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6108,6024,5940,6933,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6191,6192,6276,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,6275,6191,6107,6023,5939,5855,-1,-1,-1,6275,6191,6107,6023,5939,5855,6275,6276,-1,-1,-1,-1,
      5188,5189,5190,5191,5867,5868,-1,6970,6192,6108,6024,5940,6933,5772,-1,-1,6970,6192,6108,6024,5940,6933,-1,-1,-1,-1,-1,-1,
      5272,5273,5274,5275,5275,5952,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829,4828,4829];
      */
  
     /*
    this.map = [3848,3849,3850,3851,3848,3849,3850,3851,3851,3848,3849,3850,3851,3848,3849,3850,3851,3848,3849,3850,3851,3848,3849,5634,6566,6567,6566,6566,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5888,6566,6567,6568,6566,
      -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5802,6650,6651,6652,6650,
      3764,3765,3766,3767,3768,-1,-1,3519,-1,-1,-1,-1,-1,-1,-1,3687,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      3848,3849,3850,3851,3852,-1,-1,3603,-1,-1,-1,-1,-1,-1,-1,3771,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,3687,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,3763,3764,3765,3766,3767,3768,5144,5145,5146,5147,
      -1,-1,-1,-1,-1,-1,-1,3771,-1,3500,3501,3502,3503,3504,-1,3435,-1,-1,3847,3848,3849,3850,3851,3852,-1,-1,-1,-1,
      3765,3766,3767,3768,-1,-1,-1,3855,-1,3584,3585,3586,3587,3588,-1,3519,-1,-1,-1,3585,3586,3587,-1,-1,-1,-1,-1,-1,
      3849,3850,3851,3852,-1,-1,-1,3435,-1,3668,3669,3670,3671,3672,-1,3435,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,3519,-1,3752,3753,3754,3755,3756,-1,3519,-1,-1,3752,3753,3754,-1,3755,3756,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,3603,-1,3836,3837,3838,3839,3840,-1,3603,-1,-1,3836,3837,3838,-1,3839,3840,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,3687,-1,3920,3921,3922,3923,3924,-1,3687,-1,-1,3920,3921,3922,-1,3923,3924,-1,-1,-1,-1,
      -1,-1,3765,3766,3767,3768,-1,3603,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      3849,3850,3849,3850,3851,3852,-1,3687,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
      -1,-1,-1,-1,-1,-1,-1,3771,-1,-1,-1,2831,2832,2831,2832,2831,2832,2831,2832,-1,-1,2831,2832,2831,2832,2831,2832,-1,
      -1,-1,-1,-1,-1,-1,-1,3855,2831,2832,3512,2916,2921,2922,2916,2924,2925,2915,2916,2831,2832,2915,2916,2915,2916,2915,2831,2832,
      2830,2831,2832,2833,2834,2835,2836,2837,2915,2916,2920,2921,2922,2916,2924,2916,2921,2922,2923,2916,2920,2920,2920,2921,2922,2923,2924,2916,
      2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2920,2921,2916,2923,2924,2925,2920,2920,2920,2916,2921,2922,2920,2916,2916,2916,2924,2925];
      */
  
  
  
      
    /* Height and Width now depend on the map size. */
    this.height   = this.tile_size * this.rows;
    this.width    = this.tile_size * this.columns;
  
  };
  
  /* Now that world is a class, I moved its more generic functions into its prototype. */
  Game.World.prototype = {
  
    constructor: Game.World,
  
    collideObject:function(object) {// Same as in part 2.
  
      if (object.x < 0) { object.x = 0; object.velocity_x = 0; }
      else if (object.x + object.width > this.width) { object.x = this.width - object.width; object.velocity_x = 0; }
      if (object.y < 0) { object.y = 0; object.velocity_y = 0; }
      else if (object.y + object.height > this.height) { object.jumping = false; object.y = this.height - object.height; object.velocity_y = 0; }
  
    },
  
    update:function() {
  
      this.player.velocity_y += this.gravity;
      this.player.update();
  
      this.player.velocity_x *= this.friction;
      this.player.velocity_y *= this.friction;
  
      this.collideObject(this.player);
  
    }
  
  };
  
  /* The player is also its own class now. Since player only appears in the context
  of Game.World, that is where it is defined. */
  Game.World.Player = function(x, y) {
  
    this.color1     = "#404040";
    this.color2     = "#f0f0f0";
    this.height     = 12;
    this.jumping    = true;
    this.velocity_x = 0;
    this.velocity_y = 0;
    this.width      = 12;
    this.x          = 100;
    this.y          = 50;
  
  };
  
  Game.World.Player.prototype = {
  
    constructor : Game.World.Player,
  
    jump:function() {
  
      if (!this.jumping) {
  
        this.jumping     = true;
        this.velocity_y -= 20;
  
      }
  
    },
  
    moveLeft:function()  { this.velocity_x -= 0.5; },
    moveRight:function() { this.velocity_x += 0.5; },
  
    update:function() {
  
      this.x += this.velocity_x;
      this.y += this.velocity_y;
  
    }
  
  };
  